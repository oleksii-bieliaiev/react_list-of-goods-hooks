{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","a","b","ALPHABET","localeCompare","LENGTH","length","NONE","reverse","App","useState","setReverse","setSortType","className","onClick","type","classNames","state","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAiBzB,OAfAG,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAQL,GACN,KAAKJ,EAASU,SACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKT,EAASY,OACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QACE,OAAOb,EAASc,SAIlBT,GACFC,EAAaS,UAGRT,G,SAhCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAmCE,IAAMgB,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOZ,EAAP,KAAmBa,EAAnB,KACA,EAAgCD,mBAASjB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBe,EAAjB,KAEA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMF,EAAYnB,EAASU,WACpCY,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CACE,WAAYnB,IAAaJ,EAASU,WAPxC,iCAcA,wBACEW,QAAS,kBAAMF,EAAYnB,EAASY,SACpCU,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,WAAYnB,IAAaJ,EAASY,SAPxC,4BAcA,wBACES,QAAS,kBAAMH,GAAW,SAACM,GAAD,OAAYA,MACtCF,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CACE,YAAalB,IAPnB,sBAcEA,GAAcD,IAAaJ,EAASc,OAElC,wBACEO,QAAS,WACPH,GAAW,GACXC,EAAYnB,EAASc,OAEvBQ,KAAK,SACLF,UAAU,4BANZ,sBAaN,6BACE,6BACGlB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CoB,KAAI,SAAAC,GAAI,OACP,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cCtHvBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fdd4d132.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((a, b) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return a.localeCompare(b);\n      case SortType.LENGTH:\n        return a.length - b.length;\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SortType.ALPHABET)}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SortType.LENGTH)}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse((state) => !state)}\n          type=\"button\"\n          className={classNames(\n            'button',\n            'is-warning',\n            {\n              'is-light': !isReversed,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              onClick={() => {\n                setReverse(false);\n                setSortType(SortType.NONE);\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        <ul>\n          {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n            .map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}